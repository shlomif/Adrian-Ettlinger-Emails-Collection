Return-Path: <aettlinger@worldnet.att.net>
Delivered-To: shlomif@vipe.technion.ac.il
Received: (qmail 31287 invoked from network); 4 Dec 2001 12:03:34 -0000
Received: from mtiwmhc24.worldnet.att.net (204.127.131.49)
  by vipe.technion.ac.il with SMTP; 4 Dec 2001 12:03:34 -0000
Received: from computer ([12.78.221.217]) by mtiwmhc24.worldnet.att.net
          (InterMail vM.4.01.03.27 201-229-121-127-20010626) with SMTP
          id <20011204120324.GTWC13117.mtiwmhc24.worldnet.att.net@computer>
          for <shlomif@vipe.technion.ac.il>; Tue, 4 Dec 2001 12:03:24 +0000
Message-ID: <004301c17cbb$98ff95e0$8bdb4e0c@computer>
From: "Adrian Ettlinger" <aettlinger@worldnet.att.net>
To: "Shlomi Fish" <shlomif@vipe.technion.ac.il>
References: <Pine.LNX.4.33L2.0112040849240.28787-100000@vipe.technion.ac.il>
Subject: Re: What is the fastest configuration of FC-Pro to solve the MS 32000?
Date: Tue, 4 Dec 2001 06:56:19 -0500
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.00.2615.200
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2615.200
Status: RO
X-Status: A
X-Keywords: 
X-UID: 13
X-KMail-EncryptionState: 
X-KMail-SignatureState: 
X-KMail-MDN-Sent: 

Hi Shlomi,

    This is just an empirical guess based on my experimentation.  The best
answer could depend upon the speed of the computer, and whether one is
solving at four or fewer freecells.  But what I've been in the habit of
setting is Max. A time, 2 seconds, mode W,  Max. B time 5 minutes.
Actually, for fewer than four freecells, when you get to 2, or 1, or
especially zero, I might increase the Max. A time, but to no higher than 5
seconds.  BTW, if one sets a Max. Time, there is no point in also setting a
Max. Hands.  One or the other should be used, but not both.

    I haven't tried any experimentation with FCS to optimize the speed.  I'm
thinking it would be a good idea to provide the FcPro interface with more
options, such as to designate letters A, B, C, etc. to various combinations
of your "[12][34567..] options, to allow for more convenient
experimentation.  But you have a much better feel than I do as to what
options are the most promising, so I'll leave it to you to implement that
idea if it appeals to you.

    I see you are experimenting to try to achieve the highest speed for
obtaining solutions to all 32,000 standard M/S hands.  That I'd call a good
preliminary goal, but from my experience, to really evaluate a solver, you
have to go far beyond that goal. When I continued on, initially to 10
million hands, then to 20 million, I found a few false impossibles and
intractables.  Also, one can more efficiently find problems by solving at
less than four freecells.  One and two freecells make the most stringent
test.  This makes sense, because with so many unsolvable positions, there
are a great many more marginal situations that the solver has to contend
with.  Also, solving at four freecell from intermediate positions presents
the solver with a much higher mix of marginal situations and exposes any
deficiencies in the design than does solving from only original positions.
To this end, the new system available in Build 5 permits a convenient
automatic test of all the intermediate positions in all the solutions posted
on Mike Keller's site.

    I am working on a Build 6 that already has included an immediate manual
abort for the "all positions" test.  But I wanted to also have the first
implementation of Patsolve included.  I do have the source now, and right
now I'm hung up on a strange problem in that the position is not being
transmitted properly, even though it seems to me the pointer system is all
designed precisely the same way it is for the FCS implementation.  I think I
have to look more carefully at how you are picking up the position to see if
it's really being done the same way in Patsolve.

Best regards, ------------------Adrian


