Return-Path: <aettlinger@worldnet.att.net>
Delivered-To: shlomif@vipe.technion.ac.il
Received: (qmail 32189 invoked from network); 4 Dec 2001 12:57:47 -0000
Received: from mtiwmhc22.worldnet.att.net (204.127.131.47)
  by vipe.technion.ac.il with SMTP; 4 Dec 2001 12:57:47 -0000
Received: from computer ([12.78.219.230]) by mtiwmhc22.worldnet.att.net
          (InterMail vM.4.01.03.27 201-229-121-127-20010626) with SMTP
          id <20011204125737.NHXL941.mtiwmhc22.worldnet.att.net@computer>
          for <shlomif@vipe.technion.ac.il>; Tue, 4 Dec 2001 12:57:37 +0000
Message-ID: <001b01c17cc3$2d1803a0$33da4e0c@computer>
From: "Adrian Ettlinger" <aettlinger@worldnet.att.net>
To: "Shlomi Fish" <shlomif@vipe.technion.ac.il>
References: <Pine.LNX.4.33L2.0112041411410.31304-100000@vipe.technion.ac.il>
Subject: Re: What is the fastest configuration of FC-Pro to solve the MS32000?
Date: Tue, 4 Dec 2001 07:56:08 -0500
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.00.2615.200
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2615.200
Status: RO
X-Status: A
X-Keywords: 
X-UID: 14
X-KMail-EncryptionState: 
X-KMail-SignatureState: 
X-KMail-MDN-Sent: 

Hi Shlomi,

    That reply from you was so fast that I'm thinking we are not any longer
getting that one hour delay you'd previously noticed.

<< Do you think it would be possible to supply the user with a complete
fc-solve/test_multi_parallel command-line? I have written a function that
analyzes it and configures the FCS instance accordingly.>>
    Yes, of course, that could be programmed into free2.c   I do something
similar in the FcPro solver.  Mode W goes through a complex scenario of
trying various options for varying periods of time.  The initial, basic
variation we introduced in FcPro was column pernutations.  From what you've
said about FCS, I gather you already use variations in column order, so that
techvique, I'd think, would not be applicable to FCS.  But in FcPro, what
mode W does is to try three different alternate column permutations in
succession at the called for time (or hand) limit, then again at double that
limit, then yet again at four times that limit. Then it goes through another
list of about 15 additional column permutations at the original limit.
Then, if there's still no verdict, it tries a long time run (Max. time B) at
two basic default conditions, to see if it just needed much more time.  This
could be called a "compound" strategy.  The same general idea could be built
into free2.c.  But I think that's best done by someone who has a good feel
for the "personality" of FCS, whiich is you, so I'll leave that to you.

<<But like I have said, making sure there are no false impossibles is not
one of my greatest concerns for Freecell Solver. But speed definitely is.>>
    That is also a worthy goal, but not one which I'd call my highest
priority.  I really don't feel that a solver that tells lies is a very good
solver.  But that's just my opinion.

<<From what I remember, patsolve uses the same input board layout Scheme as
Freecell Solver does. But maybe Tom can be of more assistance. You can ask
Tom to write you an interface functions, like I did with Free2Solver.>>
    Tom did write such a function, and that's what I'm using.  I've
diagnosed it far enough as of now to see that the position just isn't
arriving in his function at all.  Even though, as I said, it looks to me as
if it's being done the exact same way I'm doing it with you.  As of now, I
don't have very efficient tools for studying it, so I'm going to do some
rearranging.  The rearranging will be to change the architecture so that it
matches how FCS is integrated, and that in itself might wind up solving the
problem.  I have enough to work on that I'm sure is on my side of fence that
I'm not ready to ask Tom for any help at this point.

Best regards, --------------Adrian


