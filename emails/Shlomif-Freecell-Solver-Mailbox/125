Return-Path: <aettlinger@worldnet.att.net>
Delivered-To: shlomif@vipe.technion.ac.il
Received: (qmail 7202 invoked from network); 19 May 2002 09:37:08 -0000
Received: from mtiwmhc21.worldnet.att.net (204.127.131.46)
  by vipe.technion.ac.il with SMTP; 19 May 2002 09:37:08 -0000
Received: from computer ([12.75.51.8]) by mtiwmhc21.worldnet.att.net
          (InterMail vM.4.01.03.27 201-229-121-127-20010626) with SMTP
          id <20020519093659.YVIH19182.mtiwmhc21.worldnet.att.net@computer>
          for <shlomif@vipe.technion.ac.il>;
          Sun, 19 May 2002 09:36:59 +0000
Message-ID: <000801c1ff18$46def780$08334b0c@computer>
From: "Adrian Ettlinger" <aettlinger@worldnet.att.net>
To: "Shlomi Fish" <shlomif@vipe.technion.ac.il>
References: <Pine.LNX.4.33L2.0205181601470.9087-100000@vipe.technion.ac.il>
Subject: Moving on to presets #7
Date: Sun, 19 May 2002 05:17:17 -0400
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.00.2615.200
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2615.200
Status: RO
X-Status: A
X-Keywords: 
X-UID: 11
X-KMail-EncryptionState: 
X-KMail-SignatureState: 
X-KMail-MDN-Sent: 

Hi Shlomi,

<<What you said is half-correct. What the system does is........>>
    The way you described it squares completely with the way I was thinking
about it; I just didn't know the right terminology to use to express it.  I
believe under Windows 95 and later, and under the Windows programming system
I've been using, true multi-tasking can be implemented, as there is a
command system relating to the creating and closing of threads.  In fact, we
have the solver running in a thread (for all three solvers now installed,
actually).  That was installed originally by Wilson Callan, and I've been
using his code as a template in installing yours and Tom Holroyd's solvers.
So I suppose if you were to use DevStudio, you could use those facilities to
implement true multi-tasking in FCS.  I realize, of course, that you
wouldn't want to do that, because you'd then lose portability of the code to
different development platforms.

    But.... while we're discussing these aspects of software technology, I
could ask this.  What would be the advantage in going to true multi-tasking
as opposed to the switch-tasking (or "pseudo" multi-tasking) which you have
designed?

    Thinking about it, I'm not so sure I've really interpreted the thread
facility of the DevStudio platform as representing true multi-tasking, so
you can correct me if that was incorrect.

    The genealogy show is over, and later today I move on to California,
where I'll be less busy for three days before returning home.

Best regards,  ---------------Adrian


