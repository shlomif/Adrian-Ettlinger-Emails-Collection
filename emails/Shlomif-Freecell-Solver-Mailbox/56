Return-Path: <aettlinger@worldnet.att.net>
Delivered-To: shlomif@vipe.technion.ac.il
Received: (qmail 28524 invoked from network); 26 Nov 2001 12:33:24 -0000
Received: from mtiwmhc24.worldnet.att.net (204.127.131.49)
  by vipe.technion.ac.il with SMTP; 26 Nov 2001 12:33:24 -0000
Received: from computer ([12.78.218.143]) by mtiwmhc24.worldnet.att.net
          (InterMail vM.4.01.03.27 201-229-121-127-20010626) with SMTP
          id <20011126123311.HLVF13117.mtiwmhc24.worldnet.att.net@computer>;
          Mon, 26 Nov 2001 12:33:11 +0000
Message-ID: <01a301c1766e$0fb9cec0$5bf94e0c@computer>
From: "Adrian Ettlinger" <aettlinger@worldnet.att.net>
To: "Shlomi Fish" <shlomif@vipe.technion.ac.il>
Cc: <fomalhaut@earthlink.net>
References: <Pine.LNX.4.33L2.0111260952001.25746-100000@vipe.technion.ac.il>
Subject: FcPro & the stack, Replays
Date: Mon, 26 Nov 2001 06:31:39 -0500
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.00.2615.200
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2615.200
Status: RO
X-Status: A
X-Keywords: 
X-UID: 75
X-KMail-EncryptionState: 
X-KMail-SignatureState: 
X-KMail-MDN-Sent: 

Hi Shlomi,

<<You mean it uses the stack for a very deep procedural recursion? Actually,
that's what my Hard-DFS scan does. I coded soft-DFS which recurses using its
own dedicated stack to avoid such stack overflows.>>
    Yes, that's what it does.  Actually, "way back when", it took me quite a
while to figure out that the stack is what it was using.  I spent a long,
long time struggling with trying to figure out why it was crashing, then
another interval of time to figure out how to tell the compiler to allocate
a larger stack.  I don't know how to implement a dedicated stack.  Do you
think it would be advatageous for FcPro to do it that way?  It would
certainly be advantageous for simplicity in helping out anyone else who
wanted to compile FcPro from the source, I can see.

<<You're right. I wrote that sentence before the previous one.>>
    OK.  Understood.

<<I'm not sure. Like I said, I return the number of cards that I moved, so
that is the only foolproof way to perform the move.>>
    OK.  Now then, let me ask you this:  Would it be very difficult for you
to modify your code so that it always moves to empty stacks the maximum
number of cards that can be moved?  The reason I ask is that I'd like to be
able to find a way, even if only temporarily, to replay your solutions, and
I'm very curious to see whether or not the way I now have the program would
play back with no illegal moves if that were the case.  I also get illegals
from the fact that you do not take into account auto-moves, but I could look
into disabling auto-move when I play back your solutions.  But no point in
studying that unless I could have a version of your code that would be
consistent in its moves to empty stacks.

    Today, after I get the new Build 62 ready and sent out, I may be able to
get back to setting up your solver to do range solves, and perhaps "solve
from list".

Best regards,  ---------------------Adrian



