Return-Path: <aettlinger@worldnet.att.net>
Delivered-To: shlomif@vipe.technion.ac.il
Received: (qmail 1620 invoked from network); 3 Jun 2002 03:19:08 -0000
Received: from mtiwmhc22.worldnet.att.net (204.127.131.47)
  by vipe.technion.ac.il with SMTP; 3 Jun 2002 03:19:08 -0000
Received: from computer ([12.78.249.80]) by mtiwmhc22.worldnet.att.net
          (InterMail vM.4.01.03.27 201-229-121-127-20010626) with SMTP
          id <20020603031855.MXKI13408.mtiwmhc22.worldnet.att.net@computer>
          for <shlomif@vipe.technion.ac.il>; Mon, 3 Jun 2002 03:18:55 +0000
Message-ID: <000401c20aac$f16cfea0$50f94e0c@computer>
From: "Adrian Ettlinger" <aettlinger@worldnet.att.net>
To: "Shlomi Fish" <shlomif@vipe.technion.ac.il>
References: <Pine.LNX.4.33L2.0205291559170.28861-100000@vipe.technion.ac.il>
Subject: FCS-FcPro integration
Date: Sun, 2 Jun 2002 23:14:51 -0400
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.00.2615.200
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2615.200
Status: RO
X-Status: A
X-Keywords: 
X-UID: 33
X-KMail-EncryptionState: 
X-KMail-SignatureState: 
X-KMail-MDN-Sent: 

Hi Shlomi,

    I've now finished up all the known problems on my side of the fence, and
I now have a full understanding of the one known remaining problem.  And it
leaves me in the position of requesting a change in Freecell Solver, a
change to which I not only can see no objection but which further will
enhance overall performance.

    The program as I now have it will replay solutions to 99 out of the
first 100 hands, and there are eight additional hands in the first 100 for
which a replayable solution file cannot be obtained.  The cause is an
idiosyncracy that can occur in FCS's moves.  The problem is that the moves
output by FCS sometimes will move an ace or a deuce, which should be used as
forced moves to the foundation, from a stack to another stack.  Aside from
the problems this gives FcPro, it is undesirable from the viewpoint of FCS's
own efficiency.  Such moves are always a waste of time and space.

    I started to dig into your code myself to see if I could figure out how
to avoid the application of such moves.  I'm stymied at the moment because I
haven't as yet been able to spot in the documentation a description of the
move structure which seems to now be the active one employing four bytes.

    I'm thinking this is something you ought to be able to implement easily.
For all the examples we now have, I believe, if you can just eliminate any
moves of aces other than to the foundation, that would suffice.  It really
should be made more sophisticated than that, and the next step would be to
treat deuces that are foundation-eligible.

Best regards, -----------------Adrian


